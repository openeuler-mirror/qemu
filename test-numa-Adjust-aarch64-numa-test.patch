From 3ef97cc418d1061fc0ec70098270ce2d76005cc1 Mon Sep 17 00:00:00 2001
From: Keqian Zhu <zhukeqian1@huawei.com>
Date: Thu, 23 Apr 2020 20:54:18 +0800
Subject: [PATCH] test/numa: Adjust aarch64 numa test

We have supported topology for arm/virt in previous patch, which
changes the meaning of "thread-id", so we must modify test case.

Signed-off-by: Keqian Zhu <zhukeqian1@huawei.com>
---
 tests/numa-test.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/tests/numa-test.c b/tests/numa-test.c
index 8de8581231..71cdd7b4f7 100644
--- a/tests/numa-test.c
+++ b/tests/numa-test.c
@@ -231,17 +231,17 @@ static void aarch64_numa_cpu(const void *data)
     QObject *e;
     QTestState *qts;

-    cli = make_cli(data, "-smp 2 "
+    cli = make_cli(data, "-smp 2,cores=2 "
         "-numa node,nodeid=0 -numa node,nodeid=1 "
-        "-numa cpu,node-id=1,thread-id=0 "
-        "-numa cpu,node-id=0,thread-id=1");
+        "-numa cpu,node-id=1,core-id=0 "
+        "-numa cpu,node-id=0,core-id=1");
     qts = qtest_init(cli);
     cpus = get_cpus(qts, &resp);
     g_assert(cpus);

     while ((e = qlist_pop(cpus))) {
         QDict *cpu, *props;
-        int64_t thread, node;
+        int64_t core, node;

         cpu = qobject_to(QDict, e);
         g_assert(qdict_haskey(cpu, "props"));
@@ -249,12 +249,12 @@ static void aarch64_numa_cpu(const void *data)

         g_assert(qdict_haskey(props, "node-id"));
         node = qdict_get_int(props, "node-id");
-        g_assert(qdict_haskey(props, "thread-id"));
-        thread = qdict_get_int(props, "thread-id");
+        g_assert(qdict_haskey(props, "core-id"));
+        core = qdict_get_int(props, "core-id");

-        if (thread == 0) {
+        if (core == 0) {
             g_assert_cmpint(node, ==, 1);
-        } else if (thread == 1) {
+        } else if (core == 1) {
             g_assert_cmpint(node, ==, 0);
         } else {
             g_assert(false);
--
2.19.1
